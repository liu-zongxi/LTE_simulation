function [y, yPg] = MIMOFadingChan(in, prmLTE, prmMdl)
% MIMOFadingChan
%#codegen
% Get simulation params
numTx          = prmLTE.numTx;
numRx          = prmLTE.numRx;
chanSRate    = prmLTE.chanSRate;
chanMdl       = prmMdl.chanMdl;
corrLvl           = prmMdl.corrLevel;    
PathDelays   = prmMdl.PathDelays ;
PathGains     = prmMdl.PathGains ;
Doppler         = prmMdl.Doppler;
ChannelType = prmMdl.ChannelType ;
AntConfig      = prmMdl.AntConfig;
% Initialize objects
persistent chanObj;
if isempty(chanObj)
    if ChannelType ==1
        chanObj = comm.MIMOChannel('SampleRate', chanSRate, ...
            'MaximumDopplerShift', Doppler, ...
            'PathDelays', PathDelays,...
            'AveragePathGains', PathGains,...
            'RandomStream', 'mt19937ar with seed',...
            'Seed', 100,...
            'TransmitCorrelationMatrix', eye(numTx),...
            'ReceiveCorrelationMatrix', eye(numRx),...
            'PathGainsOutputPort', true,...
            'NormalizePathGains', false,...
            'NormalizeChannelOutputs', true);
    else
        chanObj = comm.LTEMIMOChannel('SampleRate', chanSRate, ...
            'Profile', chanMdl, ...
            'AntennaConfiguration', AntConfig, ...
            'CorrelationLevel', corrLvl,...
            'RandomStream', 'mt19937ar with seed',...
            'Seed', 100,...
            'PathGainsOutputPort', true);
    end
end
[y, yPg] = step(chanObj, in);