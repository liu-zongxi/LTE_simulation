%--------------------------数字信号QAM解调--------------------%
%-----------------------author:lzx-------------------------%
%-----------------------date:2022年6月20日15点09分-----------------%
function y=DemodulatorHard(u, Mode)
%% Initialization
% 调用了解调
% SymbolMapping选择使用格雷码或是自己定义
% CustomSymbolMapping决定定义的内容
persistent QPSK QAM16 QAM64
if isempty(QPSK)
    QPSK = comm.PSKDemodulator(...
        'ModulationOrder', 4, ...
        'BitOutput', true, ...
        'PhaseOffset', pi/4, 'SymbolMapping', 'Custom', ...
        'CustomSymbolMapping', [0 2 3 1]);
    QAM16 = comm.RectangularQAMDemodulator(...
        'ModulationOrder', 16,  ...
        'BitOutput', true, ...
        'NormalizationMethod', 'Average power', 'SymbolMapping', 'Custom', ...
        'CustomSymbolMapping', [11 10 14 15 9 8 12 13 1 0 4 5 3 2 6 7]);
    QAM64 = comm.RectangularQAMDemodulator(...
    'ModulationOrder', 64, ...
    'BitOutput', true, ...
    'NormalizationMethod', 'Average power', 'SymbolMapping', 'Custom', ...
    'CustomSymbolMapping', ...
    [47 46 42 43 59 58 62 63 45 44 40 41 57 56 60 61 37 ...
    36 32 33 49 48 52 53 39 38 34 35 51 50 54 55 7 6 2 3 ...
    19 18 22 23 5 4 0 1 17 16 20 21 13 12 8 9 25 24 28 29 ...
    15 14 10 11 27 26 30 31]);

end
%% Processing
switch Mode
    case 1
        y=QPSK.step(u);
    case 2
        y=QAM16.step(u);
    case 3
        y=QAM64.step(u);
    otherwise
        error('Invalid Modulation Mode. Use {1,2, or 3}');
end